<?php

namespace Kaili;

require_once dirname(__FILE__).'/../../../kaili/directory.php';

/**
 * Test class for Directory.
 * Generated by PHPUnit on 2011-10-04 at 19:00:45.
 */
class DirectoryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Directory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @todo Implement testFactory().
     */
    public function testFactory()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * Test for Directory::scan_files()
     * all extentions, ascending sort
     * @test
     */
    public function test_scan_files()
    {
        $input = '/home/luigi/www/kaili/';
        $this->object = new Directory($input);
        
        $output = array(
            $input.'.gitignore', 
            $input.'.htaccess',
            $input.'index.php',
            $input.'README'
        );
        
        $this->assertEquals(array_keys($this->object->scan_files(Directory::TYPES_ALL, Directory::SORT_ASC)), $output);
    }
    
    /**
     * Test for Directory::scan_dirs()
     * @test
     */
    public function test_scan_dirs()
    {
        $input = '/home/luigi/www/kaili/';
        $this->object = new Directory($input);
        
        $output = array(
            $input.'application', 
            $input.'assets',
            $input.'.git',
            $input.'nbproject',
            $input.'system'
        );
        
        $this->assertEquals(array_keys($this->object->scan_dirs(Directory::SORT_ASC)), $output);
    }
    
    /**
     * Test for Directory::scan()
     * @test
     */
    public function test_scan()
    {
        $input = '/home/luigi/www/kaili/';
        $this->object = new Directory($input);
        
        $output = array(
            $input.'application', 
            $input.'assets',
            $input.'.git',
            $input.'.gitignore',
            $input.'.htaccess',
            $input.'index.php',
            $input.'nbproject',
            $input.'README',
            $input.'system'
        );
        
        $this->assertEquals(array_keys($this->object->scan(Directory::SORT_ASC)), $output);
    }

}

?>
